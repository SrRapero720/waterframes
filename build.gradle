import net.darkhax.curseforgegradle.TaskPublishCurseForge

plugins {
    id 'java'
    id 'idea'
    id 'fabric-loom' version '1.6-SNAPSHOT'
    id 'com.modrinth.minotaur' version '2.+'
    id 'net.darkhax.curseforgegradle' version '1.1.+'
}

base {
    archivesName = modid
    version = "$modloader-mc$mcversion-v$modversion"
}

java.toolchain {
    languageVersion = JavaLanguageVersion.of(17)
}

println "Java: ${System.getProperty 'java.version'}, Gradle Java: ${JavaVersion.current()}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
loom {
    mixin {
        defaultRefmapName = "${modid}.${mixin_refmap_suffix}"
    }

    accessWidenerPath = file("src/main/resources/${modid}.accesswidener")

    mods {
        "${modid}" {
            sourceSet sourceSets.main
        }
    }

}
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven { url 'https://repo.spongepowered.org/maven' }
    maven { url 'https://jitpack.io' }
    maven { url 'https://maven.parchmentmc.org' }
    maven {
        url 'https://www.cursemaven.com'
        content {
            includeGroup "curse.maven"
        }
    }
    // REMOVE THIS SHIT WHEN GOEDIX RELEASED VIDEOPLAYER ON CURSEFORGE
    exclusiveContent {
        forRepository {
            maven {
                name = "Modrinth"
                url = "https://api.modrinth.com/maven"
            }
        }
        filter {
            includeGroup "maven.modrinth"
        }
    }
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:$mcversion"
    mappings loom.layered() {
        officialMojangMappings()
        parchment("org.parchmentmc.data:parchment-$mcversion:$mappings_version@zip")
    }
    modImplementation "net.fabricmc:fabric-loader:${flversion}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${fabricversion}"

    //DEPENDENCIES
    modImplementation "com.github.WaterMediaTeam.watermedia:build:$watermediaversion"
//    modImplementation "maven.modrinth:video-player:$videoplayerversion"
    modImplementation "curse.maven:creativecore-257814:$creativecoreversion"
}

tasks.processResources.outputs.upToDateWhen { false }
processResources {
    filesMatching(['fabric.mod.json', 'pack.mcmeta', 'resourcepacks/**/pack.mcmeta', "$modid.$mixin_file_suffix".toString()]) {
        expand project.properties
    }
}

jar {
    manifest {
        attributes "Specification-Title"        : modid
        attributes "Specification-Vendor"       : modauthor
        attributes "Specification-Version"      : version
        attributes "Implementation-Title"       : modname
        attributes "Implementation-Version"     : version
        attributes "Implementation-Vendor"      : modauthor
        attributes "Implementation-Timestamp"   : new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        attributes "MixinConfigs"               : "$modid.$mixin_file_suffix"
    }
    exclude('org/valkyrienskies/**')
    finalizedBy(remapJar)
}

task upload(type: GradleBuild) {
    enabled = System.getenv("MODRINTH_TOKEN") != null && System.getenv("CURSEFORGE_TOKEN") != null
    description 'Uploads new version to CurseForge and Modrinth'
    group = 'publishing'
    tasks = [ 'curseforge', 'modrinth' ]
    dependsOn(remapJar)
}

task curseforge(type: TaskPublishCurseForge) {
    disableVersionDetection()
    apiToken = System.getenv("CURSEFORGE_TOKEN")

    def mainFile = upload(curseforgeid, remapJar)
    mainFile.displayName = "$modbrandname/${modloader.toLowerCase().capitalize()}/mc$mcversion/v$modversion"
    mainFile.addModLoader(modloader.toLowerCase().capitalize())
    mainFile.addGameVersion(mcversion, "server", "client")
    mainFile.addRequirement("creativecore", "watermedia")
    mainFile.addIncompatibility("stellarity")
    mainFile.changelog = getChangelogText(false)
    mainFile.changelogType = "markdown"
    mainFile.releaseType = versiontype

}

modrinth {
    token = System.getenv("MODRINTH_TOKEN")
    projectId = modrinthid

    uploadFile = remapJar
    versionName = "$modbrandname/${modloader.toLowerCase().capitalize()}/mc$mcversion/v$modversion"
    versionNumber = version.toString()
    versionType = versiontype
    gameVersions = [ mcversion ]
    changelog = getChangelogText(true)
    loaders = [ modloader.toLowerCase() ]
    dependencies {
        required.project "creativecore"
        required.project "watermedia"
        required.project "fabric-api"
        incompatible.project "stellarity"
    }
}

String getChangelogText(boolean latest) {
    String result = ''
    for (String line: file('CHANGELOG.md').readLines('UTF-8')) {
        if (latest && line.isEmpty()) return result
        result += line + "\n"
    }
    return result
}